// App.jsx - React Frontend for Real-Time Collaborative Document Editor
import React, { useEffect, useRef, useState } from "react";
import io from "socket.io-client";
import { v4 as uuidv4 } from "uuid";
import './App.css';

const socket = io("http://localhost:4000"); // Node.js backend with Socket.IO

export default function App() {
  const editorRef = useRef();
  const [docId] = useState(() => uuidv4()); // Generate unique document ID
  const [content, setContent] = useState("");

  useEffect(() => {
    socket.emit("join-doc", docId);

    socket.on("load-doc", (data) => {
      setContent(data);
    });

    socket.on("receive-changes", (newContent) => {
      setContent(newContent);
    });

    return () => socket.disconnect();
  }, [docId]);

  const handleInput = (e) => {
    const text = e.target.innerText;
    setContent(text);
    socket.emit("send-changes", { docId, content: text });
  };

  return (
    <div className="min-h-screen flex items-center justify-center bg-gray-100">
      <div
        ref={editorRef}
        contentEditable
        suppressContentEditableWarning
        onInput={handleInput}
        className="w-full max-w-4xl p-6 bg-white shadow-md rounded-md text-lg outline-none min-h-[300px]"
      >
        {content}
      </div>
    </div>
  );
}
